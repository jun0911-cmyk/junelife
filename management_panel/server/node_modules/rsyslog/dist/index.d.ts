/// <reference types="node" />
import { Socket } from 'dgram';
import { EventEmitter } from 'events';
export declare const name: any, version: any;
export declare const FACILITY: {
    kern: number;
    user: number;
    mail: number;
    daemon: number;
    auth: number;
    syslog: number;
    lpr: number;
    news: number;
    uucp: number;
    cron: number;
    security: number;
    ftp: number;
    ntp: number;
    logaudit: number;
    logalert: number;
    clock: number;
    local0: number;
    local1: number;
    local2: number;
    local3: number;
    local4: number;
    local5: number;
    local6: number;
    local7: number;
};
export declare const SEVERITY: {
    EMERG: number;
    ALERT: number;
    CRIT: number;
    ERROR: number;
    WARNING: number;
    NOTICE: number;
    INFO: number;
    DEBUG: number;
};
export declare const NILVALUE = "-";
export declare const BOM: Buffer;
/**
 * Syslog UDP options.
 */
export interface RemoteSyslogOptions {
    /**
     * Host to which to send packets.
     */
    target_host?: string;
    /**
     * UDP port to which to send packets.
     */
    target_port?: number;
    /**
     * Sender's [APPNAME]. Defaults to NILVALUE, i.e. `-`.
     *
     * [APPNAME]: https://tools.ietf.org/html/rfc5424#section-6.2.5
     */
    appname?: string;
    /**
     * Sender's [facility]. Defaults to `local0`.
     *
     * [facility]: https://tools.ietf.org/html/rfc5424#section-6.2.1
     */
    facility?: number | keyof typeof FACILITY;
    /**
     * Sender's [HOSTNAME]. Defaults to `os.hostname()`.
     *
     * [HOSTNAME]: https://tools.ietf.org/html/rfc5424#section-6.2.4
     */
    hostname?: string;
    /**
     * Sender's [PROCID]. Defaults to `process.pid`.
     *
     * [PROCID]: https://tools.ietf.org/html/rfc5424#section-6.2.6
     */
    procid?: string;
}
/**
 * Message send options.
 */
export interface RemoteSyslogSendOptions {
    /**
     * Timestamp of this message, as ms since epoch. Defaults to `Date.now()`.
     */
    timestamp?: number;
    /**
     * [MSGID]. Defaults to NILVALUE, i.e. `-`.
     *
     * [MSGID]: https://tools.ietf.org/html/rfc5424#section-6.2.7
     */
    msgid?: string;
}
/**
 * A remote syslog client. Sends over UDP.
 */
export declare class RemoteSyslog extends EventEmitter {
    private options;
    private socket;
    private pending;
    private running;
    constructor(options?: RemoteSyslogOptions);
    /**
     * Create an open a socket, if necessary.
     * Either way, return it.
     */
    connect(): Socket;
    /**
     * Handle the socket's `close` event'.
     */
    private socketClose();
    /**
     * Propagate the socket's `error` event.
     */
    private socketError(err);
    /**
     * Close the socket, if it's still open.
     */
    disconnect(): void;
    /**
     * Send a message to the remote syslogd. Pretends to be synchronous.
     */
    send(severity: number, message: string, options?: RemoteSyslogSendOptions): void;
    /**
     * Queue another buffer to be sent.
     */
    private queueMessage(buf);
    /**
     * Send the next message.
     */
    private sendNextMessage();
    /**
     * Handle send results. On errors, report them upstream. That could be
     * ignored, result in our destruction and re-creation, or result in the
     * process crashing. So, we keep sending anyway, as we're the only object
     * with a reference to the unsent messages.
     */
    private handleSendResult(err?, bytes?);
    /**
     * Start sending.
     */
    private start();
    /**
     * Continue sending if there are more packets, else stop.
     */
    private continue();
    /**
     * Stop sending.
     */
    private stop();
}
